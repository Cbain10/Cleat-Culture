{"ast":null,"code":"var _jsxFileName = \"/Users/christianbain/Documents/PERSONAL/react/cleat-culture/src/components/cleatPage/CleatPage.jsx\";\nimport React, { useState } from \"react\"; // import { useLocation } from \"react-router-dom\";\n// import { cleatService } from \"../../services/CleatService\";\n\nimport CleatReview from \"../cleat-review/cleat-review\";\nimport './CleatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CleatPage = () => {\n  // const location = useLocation();\n  // const pathname = location.pathname;\n  // const cleatId = pathname.substring(pathname.lastIndexOf('/') + 1);\n  // const [cleat, setCleat] = useState();\n  // const [reviews, setReviews] = useState([]);\n  // useEffect(() => {\n  //     reviewService.getReviews(cleatId)\n  //         .then((response) => {\n  //             setReviews(response.data);\n  //         })\n  // });\n  // const reviews = [\n  //     {\n  //         cleatName: \"Nike HyperVenom\",\n  //         comments: \"This cleat is awesome\",\n  //         userRating: 10\n  //     },\n  //     {\n  //         cleatName: \"Nike HyperVenom\",\n  //         comments: \"My all time favorite cleat\",\n  //         userRating: 9\n  //     },\n  //     {\n  //         cleatName: \"Nike HyperVenom\",\n  //         comments: \"Good for wide feet\",\n  //         userRating: 10\n  //     }\n  // ];\n  // useEffect(() => {\n  //     cleatService.getCleat(cleatId)\n  //         .then((response) => {\n  //             setCleat(response.data[0]);\n  //         })\n  // }, [cleatId]);\n  // const foundCleat = cleat ? \n  //     <div className=\"cleat-section\">\n  //         <h2>{cleat.cleatName}</h2>\n  //         <img alt={cleat.cleatName} src={cleat.imageURL} height=\"280px\" width=\"400px\" />\n  //         <div className=\"cleat-specs\">\n  //             <p>Brand - {cleat.brand}</p>\n  //             <p>Release Year - {cleat.releaseYear}</p>\n  //             <p>Rating - {cleat.rating}</p>\n  //         </div>\n  //         <h3>Reviews</h3>\n  //         {reviews.map((review, key) => {\n  //             return (\n  //                 <CleatReview\n  //                     review={review}\n  //                 />\n  //             )\n  //         })}\n  //     </div> : \n  //     <p>There is no cleat matching that id</p>;\n  // return (\n  //     <>\n  //         {foundCleat}\n  //     </>\n  // )\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There is no cleat matching that id\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 12\n  }, this);\n};\n\n_c = CleatPage;\nexport default CleatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CleatPage\");","map":{"version":3,"names":["React","useState","CleatReview","CleatPage"],"sources":["/Users/christianbain/Documents/PERSONAL/react/cleat-culture/src/components/cleatPage/CleatPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n// import { useLocation } from \"react-router-dom\";\n// import { cleatService } from \"../../services/CleatService\";\nimport CleatReview from \"../cleat-review/cleat-review\";\nimport './CleatPage.css';\n\nconst CleatPage = () => {\n\n    // const location = useLocation();\n    // const pathname = location.pathname;\n    // const cleatId = pathname.substring(pathname.lastIndexOf('/') + 1);\n\n    // const [cleat, setCleat] = useState();\n    // const [reviews, setReviews] = useState([]);\n    // useEffect(() => {\n    //     reviewService.getReviews(cleatId)\n    //         .then((response) => {\n    //             setReviews(response.data);\n    //         })\n    // });\n\n    // const reviews = [\n    //     {\n    //         cleatName: \"Nike HyperVenom\",\n    //         comments: \"This cleat is awesome\",\n    //         userRating: 10\n    //     },\n    //     {\n    //         cleatName: \"Nike HyperVenom\",\n    //         comments: \"My all time favorite cleat\",\n    //         userRating: 9\n    //     },\n    //     {\n    //         cleatName: \"Nike HyperVenom\",\n    //         comments: \"Good for wide feet\",\n    //         userRating: 10\n    //     }\n    // ];\n\n    // useEffect(() => {\n    //     cleatService.getCleat(cleatId)\n    //         .then((response) => {\n    //             setCleat(response.data[0]);\n    //         })\n    // }, [cleatId]);\n\n    // const foundCleat = cleat ? \n    //     <div className=\"cleat-section\">\n    //         <h2>{cleat.cleatName}</h2>\n    //         <img alt={cleat.cleatName} src={cleat.imageURL} height=\"280px\" width=\"400px\" />\n    //         <div className=\"cleat-specs\">\n    //             <p>Brand - {cleat.brand}</p>\n    //             <p>Release Year - {cleat.releaseYear}</p>\n    //             <p>Rating - {cleat.rating}</p>\n    //         </div>\n    //         <h3>Reviews</h3>\n    //         {reviews.map((review, key) => {\n    //             return (\n    //                 <CleatReview\n    //                     review={review}\n    //                 />\n    //             )\n    //         })}\n    //     </div> : \n    //     <p>There is no cleat matching that id</p>;\n\n    // return (\n    //     <>\n    //         {foundCleat}\n    //     </>\n    // )\n\n    return <p>There is no cleat matching that id</p>\n}\n\nexport default CleatPage;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAEpB;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAnED;;KAAMA,S;AAqEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}